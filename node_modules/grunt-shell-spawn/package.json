{
  "name": "grunt-shell-spawn",
  "version": "0.3.2",
  "description": "Grunt task to run shell commands",
  "keywords": [
    "gruntplugin",
    "grunt",
    "shell",
    "command",
    "exec",
    "spawn",
    "cli"
  ],
  "homepage": "https://github.com/cri5ti/grunt-shell-spawn",
  "bugs": {
    "url": "https://github.com/cri5ti/grunt-shell-spawn/issues"
  },
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "http://sindresorhus.com"
  },
  "contributors": [
    {
      "name": "Cristi Mihai",
      "email": "cristi.mihai@gmail.com",
      "url": "https://github.com/cri5ti"
    },
    {
      "name": "Friedel Ziegelmayer",
      "url": "https://github.com/Dignifiedquire"
    },
    {
      "name": "Trevor Landau",
      "url": "https://github.com/landau"
    }
  ],
  "main": "grunt.js",
  "bin": {
    "grunt-shell-spawn": "bin/grunt-shell-spawn"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/cri5ti/grunt-shell-spawn.git"
  },
  "dependencies": {
    "grunt": ">=0.4.x",
    "sync-exec": "^0.4.0"
  },
  "devDependencies": {
    "grunt-cli": "~0.1.9",
    "grunt-contrib-jshint": "~0.7.0",
    "grunt-contrib-nodeunit": "~0.2.2"
  },
  "scripts": {
    "test": "grunt jshint nodeunit"
  },
  "engines": {
    "node": ">=0.6.0"
  },
  "licenses": {
    "type": "MIT"
  },
  "readme": "# grunt-shell-spawn\n\n> A fork on [sindresorhus][1]'s [grunt-shell][2] ***with support for background processes***.\n>  \n> *(e.g.: start a `compass watch` in the background)*\n\n-----\n\n*This plugin requires grunt >= 0.4.x. For grunt 0.3.x, use version `0.1.3`.*\n\n### Install\n\n    npm install grunt-shell-spawn --save-dev\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with:\n\n    grunt.loadNpmTasks('grunt-shell-spawn');\n\n### Examples\n\n#### Simple task:\n\nLet's take for example launching a `compass watch` in background:\n\n```javascript\nshell: {\n    command: 'compass watch',\n    options: {\n        async: true\n    }\n}\n```\n\n#### Multitask:\n\n```javascript\nshell: {\n    compassWatch: {\n        command: 'compass watch',\n        options: {\n            async: true,\n            execOptions: {\n                cwd: './src/www/'\n           }\n       }\n    },\n    coffeeCompile: {\n        command: 'coffee -b -c -o /out /src',\n        options: {\n            async: false,\n            execOptions: {\n                cwd: './src/www/'\n            }\n        }\n    },\n    options: {\n        stdout: true,\n        stderr: true,\n        failOnError: true\n    }\n}\n```\n\n#### Custom callbacks:\n\nWorks in synchronous or asynchronous mode.\n\n```\n    asyncWithCallbacks: {\n        command: 'sleep 3 & echo HELLO & sleep 1 & echo WORLD & sleep 2',\n        options: {\n            async: true,\n            stdout: function(data) { /* ... */ },\n            stderr: function(data) { /* ... */ },\n            callback: function(exitCode, stdOutStr, stdErrStr, done) { \n                done();\n            }\n        }\n    }, \n```\n\n#### Killing an async process\n\nStop a running async task with the `:kill` task argument. \n\n```\n    server: {\n        command: 'redis-server',\n        options: {\n            async: true,\n        }\n    },\n```\n\n> `grunt shell:server shell:somethingElse shell:server:kill`\n\nThe process will be killed with a SIGKILL.\n\nPlease note that processes that are not killed will continue running even after grunt finishes, unless explicitly terminated using `:kill`. This means it is required to use `:kill` to clean up any processes you started, unless you want them to continue running in the background.\n\n## License\n\nMIT License\n(c) [Sindre Sorhus](http://sindresorhus.com)\n\n\n[1]: https://github.com/sindresorhus\n[2]: https://github.com/sindresorhus/grunt-shell\n\n[cp_spawn]: http://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options\n",
  "readmeFilename": "readme.md",
  "_id": "grunt-shell-spawn@0.3.2",
  "_from": "grunt-shell-spawn@>=0.3.0 <0.4.0"
}
